// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.224.2/containers/debian
{
	"name": "terraform-tfvars-variable-aggregator",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Debian version: bullseye, buster
		// Use bullseye on local arm64/Apple Silicon.
		"args": {
			"VARIANT": "bullseye",
			"DEVCONTAINER_SCRIPT_VERSION": "v0.226.0"
		}
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"hashicorp.terraform",
		"GitHub.vscode-pull-request-github",
		"GitHub.remotehub"
	],

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"extensions.ignoreRecommendations": true,

		"remote.containers.copyGitConfig": true,

		"terminal.integrated.inheritEnv": true,
		"terminal.integrated.allowChords": true,
		"terminal.integrated.defaultProfile.linux": "bash",
		"terminal.integrated.profiles.linux": {
			"bash": {
				"path": "/bin/bash",
				"icon": "terminal-debian"
			},
			"zsh": {
				"path": "/bin/zsh",
				"icon": "zap"
			},
			"dash": {
				"path": "/bin/dash",
				"icon": "dash"
			},
			"sh":{
				"path": "/bin/sh",
				"icon": "chevron-right"
			}
		},

		"terraform-ls.terraformExecPath": "/usr/local/bin/terraform",
		"terraform.languageServer": {
			"external": true,
			"pathToBinary": "/usr/bin/terraform-ls",
			"args": [
				"serve"
			],
			"maxNumberOfProblems": 100,
			"trace.server": "messages"
		},
	},

	"containerEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
		"CONTAINER_WORKSPACE_FOLDER": "${containerWorkspaceFolder}"
	},

	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${containerEnv:LOCAL_WORKSPACE_FOLDER}",
		"CONTAINER_WORKSPACE_FOLDER": "${containerEnv:CONTAINER_WORKSPACE_FOLDER}"
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
